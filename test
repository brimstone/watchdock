#!/bin/bash

TMP="/tmp/containers/"

echo "Clearing previous containers and images"
docker rm -f $(docker ps -a -q)
docker rmi $(docker images -q)

echo "Clearing out $TMP"
rm -rf $TMP
mkdir -p $TMP

echo "Starting watchdock in the background"


find . -name "*.go" -exec go fmt \{\} \; 2>/dev/null
go run watchdock.go --dir "$TMP" &
pid=$!

sleep 10

echo "Inserting test container file"
cat > /tmp/containers/consul.json <<DOG
{"Args":["agent","-server","-data-dir=/consul","-client=0.0.0.0","-ui-dir=/webui","--bootstrap","1"],"Config":{"Cmd":["--bootstrap","1"],"Entrypoint":["/usr/bin/consul","agent","-server","-data-dir=/consul","-client=0.0.0.0","-ui-dir=/webui"],"Env":["HOME=/","PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin","GOPATH=/go"],"ExposedPorts":{"8300/tcp":{},"8301/tcp":{},"8302/tcp":{},"8400/tcp":{},"8500/tcp":{},"8600/udp":{}},"Hostname":"dce43dffc7eb","Image":"brimstone/consul"},"Created":"2014-09-20T16:08:04.071083732Z","Driver":"aufs","HostConfig":{"NetworkMode":"bridge","PortBindings":{"8500/tcp":[{"HostPort":"8500"}]},"RestartPolicy":{"Name":"always"}},"HostnamePath":"/var/lib/docker/containers/dce43dffc7eb8cd1b981c174e4fac0a75798e86c3d4c4efe4925a2a2640426ec/hostname","HostsPath":"/var/lib/docker/containers/dce43dffc7eb8cd1b981c174e4fac0a75798e86c3d4c4efe4925a2a2640426ec/hosts","Id":"dce43dffc7eb8cd1b981c174e4fac0a75798e86c3d4c4efe4925a2a2640426ec","Image":"aa3ebf86d2d63cc6325631226abf5828431660e3b6f324204d858c0b96c43d5b","Name":"/consul","NetworkSettings":{"Bridge":"docker0","Gateway":"10.42.99.1","IPAddress":"10.42.99.32","IPPrefixLen":24,"Ports":{"8300/tcp":null,"8301/tcp":null,"8302/tcp":null,"8400/tcp":null,"8500/tcp":[{"HostIP":"0.0.0.0","HostPort":"8500"}],"8600/udp":null}},"Path":"/usr/bin/consul","ResolvConfPath":"/var/lib/docker/containers/dce43dffc7eb8cd1b981c174e4fac0a75798e86c3d4c4efe4925a2a2640426ec/resolv.conf","State":{"FinishedAt":"0001-01-01T00:00:00Z","Pid":1566,"Running":true,"StartedAt":"2014-09-20T16:08:04.344788981Z"}}
DOG

echo "Waiting up to 2 minute for consul container to show up"
i=0
while [ $i -lt 240 ]; do
	if [ "$(docker inspect -f '{{ .State.Running }}' consul 2>/dev/null )" = "true" ]; then
		echo "Took $i seconds"
		break
	fi
	i=$[ $i + 1 ]
	sleep 1
done

if [ "$(docker inspect -f '{{ .State.Running }}' consul 2>/dev/null )" = "true" ]; then
	echo "Test passed"
else
	echo "Test failed"
	pkill -f watchdock
	exit 1
fi

pkill -f watchdock
